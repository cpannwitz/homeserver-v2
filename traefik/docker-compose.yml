version: "3.8"

networks:
  traefik:
    external: true
  socketproxy:
    external: true

volumes:
  traefik-storage: {}

services:
  # ========================================================================= #
  #                                 REVERSE PROXY
  # ========================================================================= #

  # # # TESTCONTAINER
  # whoami:
  #   image: traefik/whoami
  #   container_name: whoami
  #   networks:
  #     - traefik
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.docker.network=traefik"
  #     - "traefik.http.routers.whoami.rule=Host(`whoami.${DOMAIN}`)"
  #     - "traefik.http.routers.whoami.entrypoints=websecure"
  #     - "traefik.http.routers.whoami.tls.certresolver=letsencrypt"

  traefik:
    container_name: traefik
    image: traefik:v2.6
    restart: always
    security_opt:
      - no-new-privileges:true
    depends_on:
      - socketproxy
    ports:
      - "80:80"
      - "443:443"
    networks:
      - traefik
      - socketproxy
    volumes:
      # REPLACED BY SOCKETPROXY | --providers.docker.endpoint
      # - /var/run/docker.sock:/var/run/docker.sock
      - traefik-storage:/certificates
    environment:
      - TZ=${TZ}
    command:
      # Enable API + dashboard
      - --api.dashboard=true
      - --api.debug=true
      # Set log level (DEBUG, PANIC, FATAL, ERROR, WARN, INFO)
      - --log.level=PANIC
      # Enable metrics
      - --metrics.prometheus=true
      - --ping=true
      # Enable correct usage of timezone for logs
      # - --accesslog.fields.names.StartUTC=drop
      # Docker settings
      # - --providers.docker.swarmmode=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik
      - --providers.docker.endpoint=tcp://socketproxy:2375
      - --providers.providersThrottleDuration=10s
      # Entrypoints http/https + redirection to  https
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --entrypoints.websecure.address=:443
      # LetsEncrypt certificates settings
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/certificates/acme.json
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      # Enable LetsEncrypt staging server
      # - --certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=authelia@docker"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  socketproxy:
    container_name: socketproxy
    image: tecnativa/docker-socket-proxy:latest
    restart: always
    security_opt:
      - no-new-privileges:true
    networks:
      - socketproxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - LOG_LEVEL=info # debug,info,notice,warning,err,crit,alert,emerg
      # # 0 to revoke access | 1 to grant access.
      # # Granted by Default
      # - EVENTS=1
      # - PING=1
      # - VERSION=1
      # # Revoked by Default
      # - AUTH=0
      # - SECRETS=0
      # - POST=1 # Watchtower
      # # Custom
      - BUILD=0
      - COMMIT=0
      - CONFIGS=0
      - CONTAINERS=1 # Traefik, Portainer
      - DISTRIBUTION=0
      - EXEC=0
      - IMAGES=1 # Portainer
      - INFO=1 # Portainer
      - NETWORKS=1 # Portainer
      - NODES=0
      - PLUGINS=0
      - SERVICES=1 # Portainer
      - SESSION=0
      - SWARM=0
      - SYSTEM=0
      - TASKS=1 # Portainer
      - VOLUMES=1 # Portainer